@using Newtonsoft.Json
@using PatternCreator.Models
@using PatternCreator.Utilities
@model int[]
@{
    UserContext db = new UserContext();
    int i = 0;
}
<style>
    .input-validation-error {
        border-color: red;
        border-width: 2px;
    }
</style>
<form id="MarkForm">
    <div class="text-center">
        @foreach (var model in Model)
        {
            DocumentModel doc = db.DocumentModels.Find(model);
            if (doc==null){continue;}
            Dictionary<int, string> marks = JsonConvert.DeserializeObject<Dictionary<int, string>>(doc.HandWriteFields);
            UserModel user = doc.UserModel;
            
            SpecialtyModel specialty = doc.SpecialtyModel;

            if (user == null || specialty == null) { continue; }
            <div class="text-center">@($"{user.Surname} {user.Name} {user.Patronymic}")</div>
            <table class="table MarkTable" data-userid="@(user.Id)">
                <tbody>
                    @foreach (var markModel in specialty.MarkModels.OrderBy(t => t.Number).Where(t => t.Number != null))
                    {
                        <tr data-markid="@(markModel.Id)">
                            <td>@(markModel.Number).</td>
                            <td>@(markModel.Naming)</td>
                            <td><input class="form-control Mark" name="[@i].Mark" data-val-required="Заполните поле" data-val="true" value="@(marks.ContainsKey(markModel.Id)?marks[markModel.Id]:"")"/></td>
                        </tr>
                        i++;
                    }
                    @foreach (var markModel in specialty.MarkModels.Where(t => t.Number == null))
                    {
                        <tr data-markid="@(markModel.Id)">
                            <td></td>
                            <td>@(markModel.Naming)</td>
                            <td><input class="form-control Mark" type="text" name="[@i].Mark" data-val-required="Заполните поле" data-val="true" value="@(marks.ContainsKey(markModel.Id)?marks[markModel.Id]:"")"/></td>
                        </tr>
                        i++;
                    }
                </tbody>
            </table>
        }
        <input type="button" id="sendReadyMarks" class="btn btn-primary" value="Продолжить" />
    </div>
</form>
<script>
    $.validator.unobtrusive.parse($("#MarkForm"));
</script>
@{db.Dispose();}