@using System.Web.UI.WebControls
@using PatternCreator.Models
@using PatternCreator.Utilities
@model CompanyViewModel[]
@{
    ViewBag.Title = "Управление пользователями";
    UserModelViewModel client = new UserModelViewModel();
    CreateCompanyModel newCompany = new CreateCompanyModel();
    var CompanyesList = Enumerable.Select(Model, t => new SelectListItem
    {
        Value = t.CompanyId.ToString(),
        Text = t.CompanyName
    });
}
@Styles.Render("~/bundles/Home-css")

<div id="BlockOne">
    <div id="UserControl">
        <div id="AligmentAdd">
            
                <button class="AddUserControl" data-toggle="modal" data-target="#UsersModal">
                    <span class="ControlTextChoose">Добавить пользователя</span>
                    <img src="/Resourses/svg/add-user.svg" class="AddUserImg">
                </button>
           
        </div>

        <div id="AligmentDelete">
                <button class="DeleteUserControl" data-toggle="modal" data-target="#companyModal">
                    <span class="ControlText">Добавить компанию</span>
                </button>
           
        </div>

        <div id="AligmentFind">
            @*@using (Ajax.BeginForm("FindUsersParital", new AjaxOptions {UpdateTargetId = "results", OnSuccess = "OnSuccess"}))
                {*@
            <div class="FindUsersControl">
                <input type="text" name="name" class="ControlText" id="FindUsers" placeholder="Поиск по пользователям">

                <button class="FindButton">
                    <img src="/Resourses/svg/magnifying-glass (3).svg" class="AddUserImg">
                </button>
            </div>
            @*}*@
        </div>
    </div>
    <div>
        <div id="TableTwo">
          
            <table class="table" style="width:100%" id="companies">
                <thead>
                    <tr>
                        <th scope="col" style="width: 55px">№</th>
                        <th scope="col" style="width: auto">Имя</th>
                        <th scope="col" style="width: auto">Фамилия</th>
                        <th scope="col" style="width: auto">Отчество</th>
                        <th scope="col" style="width: 50px"></th>
                        <th scope="col" style="width:100px"></th>
                    </tr>
                </thead>
                <tbody class="table-hover table-borderless text-center">
                    @{
                        foreach (CompanyViewModel company in Model)
                        {
                            int count = 1;
                            <tr data-header-id="@company.CompanyId">
                                <th colspan="5">
                                    <div class="w-25 text-right text-nowrap">
                                        @company.CompanyName
                                        <button type="button" class="closeTableBut" data-company-id="@company.CompanyId">
                                            <img src="/Resourses/svg/down-arrow (2).svg" style="height: 17px; width: 20px;" />
                                        </button>
                                    </div>
                                </th>
                                
                                <td class="d-flex justify-content-around align-middle">
                                    <a class="IconButtonsSave ManageIconStyle" data-company-id="@company.CompanyId" data-action="saveCompany">
                                        <img src='/Resourses/svg/save-file.svg' class="img-fluid">
                                    </a>
                                    <a class="IconButtonsSave ManageIconStyle" data-company-id="@company.CompanyId" data-action="deleteCompany">
                                        <img src="/Resourses/svg/delete.svg" class="img-fluid">
                                    </a>
                                </td>
                            </tr>
                            foreach (UserModelViewModel user in company.UserViewModels)
                            {
                            <tr data-company-id="@company.CompanyId">
                                    
                                    <td class="align-middle py-1"><span>@(count++)</span></td>
                                    <td class="align-middle py-1" data-user-id="@user.Id">
                                        @Html.EditorFor(model => user.Name, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Имя*" } })
                                        @Html.EditorFor(model => user.Name_DativeCase, new { htmlAttributes = new { @class = "EditCol", style="display: none", PlaceHolder = "Имя(Д.П.)*", id = "" } })
                                    </td>
                                    <td class="align-middle py-1" data-user-id="@user.Id">
                                        @Html.EditorFor(model => user.Surname, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Фамилия*" } })
                                        @Html.EditorFor(model => user.Surname_DativeCase, new { htmlAttributes = new { @class = "EditCol", style = "display: none", PlaceHolder = "Фамилия(Д.П.)*", id = "" } })

                                    </td>
                                    <td class="align-middle py-1" data-user-id="@user.Id">
                                        @Html.EditorFor(model => user.Patronymic, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Отчество", id = "" } })
                                        @Html.EditorFor(model => user.Patronymic_DativeCase, new { htmlAttributes = new { @class = "EditCol", style = "display: none", PlaceHolder = "Отчество(Д.П.)", id = "" } })
                                    </td>
                                    <td class="align-middle py-1">
                                        <a class="d-flex IconButtonsSave ManageIconStyle" data-user-id="@user.Id" data-action="swap">
                                            <img src='/Resourses/svg/swap.svg' class="img-fluid">
                                        </a>
                                    </td>
                                    <td class="d-flex justify-content-around align-middle py-1">
                                        <a class="IconButtonsSave ManageIconStyle" data-user-id="@user.Id" data-action="saveUser">
                                            <img src='/Resourses/svg/save-file.svg' class="img-fluid">
                                        </a>
                                        <a class="IconButtonsSave ManageIconStyle" data-user-id="@user.Id" data-action="deleteUser">
                                            <img src="/Resourses/svg/delete.svg" class="img-fluid">
                                        </a>
                                    </td>
                               
                            </tr>
                            }
                        }
                    }


                </tbody>
            </table>
        </div>
    </div>
</div>


    <div class="modal fade" id="UsersModal" tabindex="-1" role="dialog" aria-labelledby="UsersModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Добавить пользователя</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("UserToDb", "Pattern", FormMethod.Post, new { @class = "form-row justify-content-center" }))
                    {
                    <div class="flex-column d-flex w-75 p-2 align-items-center">
                        @Html.ValidationSummary("", new { @class = "text-danger d-flex text-center" })
                        @Html.EditorFor(t=>client.Name, new { htmlAttributes = new { @class = "EditCol mt-2", PlaceHolder = "Имя*" } })
                        @Html.EditorFor(t=>client.Surname, new { htmlAttributes = new { @class = "EditCol my-2", PlaceHolder = "Фамилия*" } })
                        @Html.EditorFor(t=>client.Patronymic, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Отчество" } })
                        @Html.EditorFor(t=>client.Name_DativeCase, new { htmlAttributes = new { @class = "EditCol my-2", PlaceHolder = "Имя (Д.П.)*" } })
                        @Html.EditorFor(t=>client.Surname_DativeCase, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Фамилия (Д.П.)*" } })
                        @Html.EditorFor(t=>client.Patronymic_DativeCase, new { htmlAttributes = new { @class = "EditCol my-2", PlaceHolder = "Отчество (Д.П.)" } })
                        @Html.DropDownListFor(t=>client.CompanyId, CompanyesList, "Выберите компанию" ,  new { @class = "EditCol my-2" })
                        
                        <input type="submit" class="btn btn-primary w-50 my-3" value="Сохранить" />
                    </div>
                    }
                </div>

            </div>
        </div>
    </div>


<div class="modal fade" id="companyModal" tabindex="-1" role="dialog" aria-labelledby="companyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Добавить компанию</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CompanyToDb", "Pattern", FormMethod.Post, new { @class = "form-row justify-content-center" }))
                {
                    @Html.ValidationSummary("", new { @class = "text-danger d-flex text-center" })
                    <div class="flex-column d-flex w-75 p-2 align-items-center">
                        @Html.EditorFor(t => newCompany.CompanyName, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Название компании*" } })
                        <input type="submit" class="btn btn-primary w-50 my-3" value="Сохранить" />
                    </div>
                }
            </div>
           
        </div>
    </div>
</div>

@section Scripts{
    <script>
    $(document).ready(function() {
        $("a.IconButtonsSave").click(function(e) {
            
            switch ($(this).data("action")) {
            case "deleteCompany":
                var companyId = $(this).data("company-id");
                var target = $(this);
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("RemoveCompany", "Pattern")",
                    data: `id=${companyId}`,
                    success: function(data) {
                        //$(e.target).parent().parent().parent().remove();
                        if (data === "True") {
                            $("tr[data-company-id='" + companyId + "']").fadeOut(400, function () {
                                $(this).remove();
                            });
                            target.closest("tr").fadeOut(400, function () {
                                $(this).remove();
                            });
                        } else {
                            alert("Произошла ошибка, попробуйте позже");
                        }
                    },
                    error: function() {
                        alert("Произошла ошибка, попробуйте позже");
                    }
                });
                break;
            case "saveUser":
                var companyId = $(this).closest("tr").data("company-id");
                var target = $(this);
                var userId = $(this).data("user-id");
                var client = {
                    Id: userId,
                    Name: $("td[data-user-id='" + userId + "']>input[name='user.Name']").val(),
                    Surname: $("td[data-user-id='" + userId + "']>input[name='user.Surname']").val(),
                    Patronymic: $("td[data-user-id='" + userId + "']>input[name='user.Patronymic']").val(),
                    Name_DativeCase: $("td[data-user-id='" + userId + "']>input[name='user.Name_DativeCase']").val(),
                    Surname_DativeCase: $("td[data-user-id='" + userId + "']>input[name='user.Surname_DativeCase']").val(),
                    Patronymic_DativeCase: $("td[data-user-id='" + userId + "']>input[name='user.Patronymic_DativeCase']").val(),
                    CompanyId: companyId
                }
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("SaveUser", "Pattern")",
                    data: {
                        client: client
                    },
                    success: function(data) {
                        //$(e.target).parent().parent().parent().remove();
                        if (data === "True") {
                            alert("Изменения сохранены");
                        } else {
                            alert("Произошла ошибка, попробуйте позже");
                        }
                    },
                    error: function() {
                        alert("Произошла ошибка, попробуйте позже");
                    }
                });
                    break;
            case "deleteUser":
                    var userId = $(this).data("user-id");
                    var target = $(this);
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("RemoveUser", "Pattern")",
                    data: `id=${userId}`,
                    success: function(data) {
                        //$(e.target).parent().parent().parent().remove();
                        if (data === "True") {
                            target.closest("tr").fadeOut(400, function() {
                                $(this).remove();
                            });
                        } else {
                            alert("Произошла ошибка, попробуйте позже");
                        }
                    },
                    error: function() {
                        alert("Произошла ошибка, попробуйте позже");
                    }
                });
                    break;
            case "swap":
                    var userId = $(this).data("user-id");
                    var hidden = $("td[data-user-id='" + userId + "']>input:hidden");
                    var i = 0; 
                    $("td[data-user-id='" + userId + "']>input:visible").fadeToggle(200, function() {
                        i++;
                        if (i>2) {
                        hidden.fadeToggle(200);
                        }
                    });
                   
                    break;
            default:
            }
            
        });
        });


        //$("tr.normalTr").hover(function() {
        //    //$(this).addClass("ColoredTr");
        //    //const block = $(`<div class='IconUtilities'>
        //    //        <button class='IconButtonsDelete'>
        //    //        <img src='/Resourses/svg/delete.svg' class='ManageIconStyle'>
        //    //    </button>
        //    //</div>`);

        //    //$(this).append(block);


        //},
        //function() {

        //    $(".ColoredTr").removeClass();
        //    $("div.IconUtilities").remove();

        //    });

        $(".IconButtonsEdit").click(function(e) {
            const input = $(".ColoredTr > td > input");
            const span = $(".ColoredTr > td > span");
            const saveButton = $(".ColoredTr").children()[3].children[2];
            console.log(saveButton);
            $(span).css("display", "none");

            $(input).css("display", "initial");
            $(saveButton).css("display", "contents");
        });

        $(".IconButtonsSave").click(function() {
        });

        $(".IconButtonsDelete").click(function() {
            if (confirm("Вы уверены?")) {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("RemoveUser", "Pattern")",
                    data: `id=${$(this).parent().parent().parent().attr("userId")}`,
                    success: ()=> {
                        $(this).parent().parent().parent().remove();
                    },
                    error: function(data) {
                        alert(data);
                    }
                });
            }
        });

        $(".closeTableBut").click(function(e) {
            var id = $(this).data("company-id");
            $("tr[data-company-id='" + id + "']").each(function() {
                $(this).fadeToggle(400);
            });
            $(this).toggleClass('rotated');
        });

       
    </script>

    @Scripts.Render("~/bundles/Home-js")
}