@using System.Web.UI.WebControls
@using PatternCreator.Models
@using PatternCreator.Utilities
@model CompanyViewModel[]
@{
    ViewBag.Title = "Управление пользователями";
    UserModelViewModel client = new UserModelViewModel();
    CreateCompanyModel newCompany = new CreateCompanyModel();
    var CompanyesList = Enumerable.Select(Model, t => new SelectListItem
    {
        Value = t.CompanyId.ToString(),
        Text = t.CompanyName
    });
}
@Styles.Render("~/bundles/Print-css")
@Styles.Render("~/bundles/Home-css")
@Styles.Render("~/Content/tableSelection.css")
@Scripts.Render("~/Scripts/tableSelection.min.js")

<div id="BlockOne">
    <div id="UserControl">
        <div id="AligmentAdd">

            <button class="AddUserControl" data-toggle="modal" data-target="#UsersModal">
                <span class="ControlTextChoose">Добавить пользователя</span>
                <img src="/Resourses/svg/add-user.svg" class="AddUserImg">
            </button>

        </div>

        <div id="AligmentDelete">
            <button class="DeleteUserControl" data-toggle="modal" data-target="#companyModal">
                <span class="ControlText">Добавить компанию</span>
            </button>

        </div>

        <div id="AligmentFind">
            @using (Ajax.BeginForm("FindUsersByString", new AjaxOptions {UpdateTargetId = "TableTwo"}))
            {
            <div class="FindUsersControl">
                <input type="text" name="searchText" class="ControlText" id="FindUsers" placeholder="Поиск по пользователям">
                <button class="FindButton">
                    <img src="/Resourses/svg/magnifying-glass (3).svg" class="AddUserImg">
                </button>
            </div>
            }
        </div>
    </div>
    <div class="container-fluid mt-2 text-center">
        <div class="btn-group-toggle" data-toggle="buttons">
            @foreach (CompanyViewModel c in Model)
            {
                <div class="btn btn-outline-primary my-1 p-0" aria-pressed="true">
                    <input type="radio" name="companies" id="option1">
                    <a data-ajax="true" class="w-75 h-100 m-0 text-dark text-decoration-none" data-ajax-mode="replace" data-ajax-update="#TableTwo" href="/Pattern/GetUsersByPage/@(c.CompanyId)?page=1">
                        <span class="m-2 text-black-50">
                            @c.CompanyName
                        </span>
                    </a>
                    <a class="IconButtonsSave ManageIconStyle m-0 text-danger text-decoration-none mr-2" data-company-id="@c.CompanyId" data-action="deleteCompany">&#x2716;
                    </a>
                </div>
                
            }
        </div>
    </div>

    <form id="TableTwo">
    </form>

</div>


<div class="modal fade-scale" id="UsersModal" tabindex="-1" role="dialog" aria-labelledby="UsersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="UsersModalLabel">Добавить пользователя</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("UserToDb", "Pattern", FormMethod.Post, new { @class = "form-row justify-content-center" }))
                {
                    <div class="flex-column d-flex w-75 p-2 align-items-center">
                        @Html.ValidationSummary("", new { @class = "text-danger d-flex text-center" })
                        @Html.EditorFor(t => client.Name, new { htmlAttributes = new { @class = "EditCol mt-2", PlaceHolder = "Имя*" } })
                        @Html.EditorFor(t => client.Surname, new { htmlAttributes = new { @class = "EditCol my-2", PlaceHolder = "Фамилия*" } })
                        @Html.EditorFor(t => client.Patronymic, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Отчество" } })
                        @Html.EditorFor(t => client.Name_DativeCase, new { htmlAttributes = new { @class = "EditCol my-2", PlaceHolder = "Имя (Д.П.)*" } })
                        @Html.EditorFor(t => client.Surname_DativeCase, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Фамилия (Д.П.)*" } })
                        @Html.EditorFor(t => client.Patronymic_DativeCase, new { htmlAttributes = new { @class = "EditCol my-2", PlaceHolder = "Отчество (Д.П.)" } })
                        @Html.EditorFor(t => client.Position, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Должность" } })
                        @Html.EditorFor(t => client.Education, new { htmlAttributes = new { @class = "EditCol my-2", PlaceHolder = "Образование" } })
                        @Html.DropDownListFor(t => client.CompanyId, CompanyesList, "Выберите компанию", new { @class = "EditCol my-2" })

                        <input type="submit" class="btn btn-primary w-50 my-3" value="Сохранить" />
                    </div>
                }
            </div>

        </div>
    </div>
</div>
<div class="modal fade-scale" id="EditUserModal" tabindex="-1" role="dialog" aria-labelledby="EditUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="EditUserModalLabel">Редактирование пользователя</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="userContainer">

            </div>

        </div>
    </div>
</div>
<div class="modal fade-scale" id="DocsModal" tabindex="-1" role="dialog" aria-labelledby="DocsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="DocsModalLabel">Заведенные документы</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="DocsTablse" style="height: 500px !important; overflow-y: auto">

            </div>
            <div class="modal-footer d-flex justify-content-center">
                <div class="custom-control custom-checkbox">
                    <input type="checkbox" class="custom-control-input" id="substrate" />
                    <label class="custom-control-label" for="substrate">Подложка</label>
                </div>
                <button type="button" class="btn btn-primary" id="printBtn">Печать</button>
            </div>
        </div>
    </div>
</div>
<div id="photosForPrint" style="display: none"></div>
<div class="modal fade-scale" id="companyModal" tabindex="-1" role="dialog" aria-labelledby="companyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Добавить компанию</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("CompanyToDb", "Pattern", FormMethod.Post, new { @class = "form-row justify-content-center" }))
                {
                    @Html.ValidationSummary("", new { @class = "text-danger d-flex text-center" })
                    <div class="flex-column d-flex w-75 p-2 align-items-center">
                        @Html.EditorFor(t => newCompany.CompanyName, new { htmlAttributes = new { @class = "EditCol", PlaceHolder = "Название компании*" } })
                        <input type="submit" class="btn btn-primary w-50 my-3" value="Сохранить" />
                    </div>
                }
            </div>

        </div>
    </div>
</div>

@section Scripts{
    @Scripts.Render("~/bundles/Print-js")
<script>
        function validElement(element) {
            if (!$(element).valid()) {
                $(element).addClass("val-error");
                return false;
            }
            $(element).removeClass("val-error");
            return true;
        }

        $(document).on("input",
            "td>.EditCol",
            function() {
                validElement(this);
            });

        function onSuccessPhoto(result) {
            if ($("#userimage").attr('src').includes('?')) {
                $("#userimage").attr('src', "/Pattern/GetUserPhoto/" + $("#targetPhoto").val());
            } else {
                $("#userimage").attr('src', "/Pattern/GetUserPhoto?id=" + $("#targetPhoto").val());

            }

        }

        $(document).ready(function() {
            $(document).on("click",
                "#Diploms",
                function() {
                    if ($("#choosedTypes").hasClass("d-none")) {
                        $("#choosedTypes").removeClass("d-none");
                        $("#tableDiploma").show();
                        $("#tableDocs").hide();
                    }
                });
            $(document).on("click",
                "#Docs",
                function () {
                    if (!$("#choosedTypes").hasClass("d-none")) {
                        $("#choosedTypes").addClass("d-none");
                        $("#tableDiploma").hide();
                        $("#tableDocs").show();
                    }
                });

            $(document).on('click',
                "#printBtn",
                function () {
                    $("#DocsModal").modal("hide");
                    $("#preloader-id").removeClass("done");
                    if ($("#Diploms").hasClass("active")) {
                        let data = $("#tableDiploma").find("tr.selected").toArray().map(t => $(t).data('docid'));
                        $.post(
                            '@Url.Action("ReadyDiploma", "Print")',
                            {
                                data: JSON.stringify(data),
                                isdiploma: $("#diploma").hasClass('active'),
                                isapplication: $("#application").hasClass('active'),
                                ismarks: $("#marks").hasClass('active'),
                                substrate: $("#substrate").prop("checked")
                            },
                            function(result) {
                                $('#photosForPrint').html(result);
                                $("#preloader-id").addClass("done");
                                var bufferStr = '';
                                $("#photosForPrint>.printdocument").each(function() {
                                    bufferStr += this.innerHTML;
                                });
                                $("#DocsModal").modal("show");
                                printJS({
                                    printable: bufferStr,
                                    type: 'raw-html',
                                    style: 'body {margin: 0.001cm; padding: 0px;}',
                                    base64: true
                                });
                            },
                            "html");
                    } else {
                        let data = $("#tableDocs").find("tr.selected").toArray().map(t => $(t).data('docid'));
                        $.post(
                            '@Url.Action("GetComputedPhotos", "Print")',
                            {
                                data: JSON.stringify(data),
                                substrate: $("#substrate").prop("checked")
                            },
                            function(result) {

                                $('#photosForPrint').html(result);
                                $("#preloader-id").addClass("done");
                                //console.log(result);
                                //var images = $(document.getElementById("photosForPrint").getElementsByClassName('photo'));
                                var bufferStr = '';
                                $(".printdocument").removeClass('d-none');
                                $(".photo-wrap>.printdocument").each(function() {
                                    bufferStr += this.innerHTML;
                                    console.log(this.innerHTML);
                                });
                                console.log(bufferStr);
                                $("#DocsModal").modal("show");
                                printJS({
                                    printable: bufferStr,
                                    type: 'raw-html',
                                    style: '* {margin: 0px; padding: 0px;}'
                                });

                            },
                            "html");
                    }

                });

            $(document).on("change",
                "#customFile",
                function() {

                    $("#submitPhoto").submit();
                });

            $(document).on('click',
                "a.IconButtonsSave",
                function(e) {
                    switch ($(this).data("action")) {
                    case "deleteCompany":
                        var companyId = $(this).data("company-id");
                        var target = $(this);
                        if (confirm("Вы уверены что хотите удалить компанию? Вместе с компанией будут удалены все пользователи!")) {
                            $.ajax({
                                type: "GET",
                                url: "@Url.Action("RemoveCompany", "Pattern")",
                                data: `id=${companyId}`,
                                success: function(data) {
                                    //$(e.target).parent().parent().parent().remove();
                                    if (data === "True") {
                                        var closest = $(target).closest("div.btn");
                                        if (closest.hasClass("active")) {
                                            $("#TableTwo").html("");
                                        }
                                        closest.remove();
                                    } else {
                                        alert("Произошла ошибка, попробуйте позже");
                                    }
                                },
                                error: function() {
                                    alert("Произошла ошибка, попробуйте позже");
                                }
                            });
                        }
                        break;
                    case "saveUser":
                        var valid = true;
                        var userId = $(this).data("user-id");
                        $("td[data-user-id='" + userId + "']>input").each(function() {
                            if (!validElement(this)) {
                                valid = false;
                            }
                        });
                        if (!valid) {
                            alert("Не валидные значения полей!")
                            break;
                        }
                        var companyId = $(this).closest("tr").data("company-id");
                        var target = $(this);
                        var userId = $(this).data("user-id");
                        var client = {
                            Id: userId,
                            Name: $("td[data-user-id='" + userId + "']>input[name='user.Name']").val(),
                            Surname: $("td[data-user-id='" + userId + "']>input[name='user.Surname']").val(),
                            Patronymic: $("td[data-user-id='" + userId + "']>input[name='user.Patronymic']").val(),
                            Name_DativeCase: $("td[data-user-id='" + userId + "']>input[name='user.Name_DativeCase']")
                                .val(),
                            Surname_DativeCase: $("td[data-user-id='" + userId + "']>input[name='user.Surname_DativeCase']")
                                .val(),
                            Patronymic_DativeCase: $("td[data-user-id='" +
                                userId +
                                "']>input[name='user.Patronymic_DativeCase']").val(),
                            CompanyId: companyId
                        }
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("SaveUser", "Pattern")",
                            data: {
                                client: client
                            },
                            success: function(data) {
                                //$(e.target).parent().parent().parent().remove();
                                if (data === "True") {
                                    alert("Изменения сохранены");
                                } else {
                                    alert("Произошла ошибка, попробуйте позже");
                                }
                            },
                            error: function() {
                                alert("Произошла ошибка, попробуйте позже");
                            }
                        });
                        break;
                    case "deleteUser":
                        var userId = $(this).data("user-id");
                        var target = $(this);
                        $.ajax({
                            type: "GET",
                            url: "@Url.Action("RemoveUser", "Pattern")",
                            data: `id=${userId}`,
                            success: function(data) {
                                //$(e.target).parent().parent().parent().remove();
                                if (data === "True") {
                                    target.closest("tr").fadeOut(400,
                                        function() {
                                            $(this).remove();
                                        });
                                } else {
                                    alert("Произошла ошибка, попробуйте позже");
                                }
                            },
                            error: function() {
                                alert("Произошла ошибка, попробуйте позже");
                            }
                        });
                        break;
                    case "swap":
                        var userId = $(this).data("user-id");
                        var hidden = $("td[data-user-id='" + userId + "']>input:hidden");
                        var i = 0;
                        $("td[data-user-id='" + userId + "']>input:visible").fadeToggle(200,
                            function() {
                                i++;
                                if (i > 2) {
                                    hidden.fadeToggle(200);
                                }
                            });

                        break;
                    default:
                    }

                });
        });


        $(".IconButtonsEdit").click(function(e) {
            const input = $(".ColoredTr > td > input");
            const span = $(".ColoredTr > td > span");
            const saveButton = $(".ColoredTr").children()[3].children[2];
            console.log(saveButton);
            $(span).css("display", "none");

            $(input).css("display", "initial");
            $(saveButton).css("display", "contents");
        });

        $(".IconButtonsSave").click(function() {
        });
        $(document).on("click",
            ".IconButtonsDelete",
            function() {
                if (confirm("Вы уверены?")) {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("RemoveUser", "Pattern")",
                        data: `id=${$(this).parent().parent().parent().attr("userId")}`,
                        success: () => {
                            $(this).parent().parent().parent().remove();
                        },
                        error: function(data) {
                            alert(data);
                        }
                    });
                }
            });
        $(document).on("click",
            ".closeTableBut",
            function() {
                var id = $(this).data("company-id");
                $("tr[data-company-id='" + id + "']:not('.notfounded')").each(function() {
                    $(this).fadeToggle(400);
                });
                $(this).toggleClass('rotated');
            });
</script>

    @Scripts.Render("~/bundles/Home-js")
}